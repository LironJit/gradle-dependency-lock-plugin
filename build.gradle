/*
 * Copyright 2014-2019 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import org.gradle.util.GradleVersion

plugins {
    id 'nebula.plugin-plugin' version '13.2.0'
    id 'nebula.optional-base' version '3.1.0'
    id 'nebula.kotlin' version '1.3.50'
    id 'java-gradle-plugin'
}

description 'Gradle plugin to allow locking of dynamic dependency versions'

group = 'com.netflix.nebula'

contacts {
    'rob.spieldenner@gmail.com' {
        moniker 'Rob Spieldenner'
        github 'rspieldenner'
    }
    'nadavcoh@gmail.com' {
        moniker 'Nadav Cohen'
        github 'nadavc'
    }
    'roberto@perezalcolea.info' {
        moniker 'Roberto Perez Alcolea'
        github 'rpalcolea'
    }
}

dependencies {
    implementation 'com.squareup.moshi:moshi:1.8.0'
    implementation 'joda-time:joda-time:2.10'
    implementation 'com.netflix.nebula:nebula-gradle-interop:latest.release'
    implementation 'com.netflix.nebula:gradle-scm-plugin:latest.release'
    implementation('com.netflix.nebula:nebula-dependencies-comparison:latest.release') {
        exclude module: 'groovy-all'
    }
    implementation 'com.netflix.nebula:gradle-metrics-plugin:8.+', optional

    implementation platform("com.fasterxml.jackson:jackson-bom:2.9.9.20190807")

    testImplementation 'com.netflix.nebula:gradle-git-scm-plugin:latest.release'
    testImplementation 'com.netflix.nebula:nebula-project-plugin:latest.release'
    testImplementation 'com.netflix.nebula:nebula-test:latest.release'
    testImplementation gradleTestKit()
    testImplementation('org.ajoberstar.grgit:grgit-core:3.0.0-beta.1') {
        exclude group: 'org.codehaus.groovy', module: 'groovy'
    }
    testImplementation "com.github.tomakehurst:wiremock:2.17.0"
}

gradlePlugin {
    plugins {
        dependencyLock {
            id = 'nebula.dependency-lock'
            implementationClass = 'nebula.plugin.dependencylock.DependencyLockPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/nebula-plugins/gradle-dependency-lock-plugin'
    vcsUrl = 'https://github.com/nebula-plugins/gradle-dependency-lock-plugin.git'
    description = 'Plugin to lock dynamic dependencies'

    plugins {
        dependencyLock {
            id = 'nebula.dependency-lock'
            displayName = 'Nebula Dependency Lock plugin'
            description = 'Plugin to lock dynamic dependencies'
            tags = ['nebula', 'dependencies', 'lock']
        }
    }
}

// Kotlin compiles first, stubbing Java dependencies, however it can't stub Groovy and we need to call Groovy code from Kotlin. For details see:
// https://discuss.gradle.org/t/kotlin-groovy-and-java-compilation/14903/10
if (GradleVersion.version(project.gradle.gradleVersion).compareTo(GradleVersion.version('4.4.1'))) {
    compileGroovy.dependsOn = compileGroovy.taskDependencies.mutableValues - 'compileJava'
} else {
    compileGroovy.dependsOn = compileGroovy.taskDependencies.values - 'compileJava'
}
compileKotlin.dependsOn compileGroovy
compileKotlin.classpath += files(compileGroovy.destinationDir)
classes.dependsOn compileKotlin

test {
    forkEvery = 1
}
